[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://duhpjxmcic87"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pifqm"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_cvyif"]
function = 3

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;



void fragment() {
// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


	vec3 n_out3p0;
// ColorFunc:3
	{
		vec3 c = vec3(n_out2p0.xyz);
		float r = (c.r * .393) + (c.g *.769) + (c.b * .189);
		float g = (c.r * .349) + (c.g *.686) + (c.b * .168);
		float b = (c.r * .272) + (c.g *.534) + (c.b * .131);
		n_out3p0 = vec3(r, g, b);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
graph_offset = Vector2(-201, 0)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_pifqm")
nodes/fragment/2/position = Vector2(-100, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorFunc_cvyif")
nodes/fragment/3/position = Vector2(180, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0)
