[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://db4tk2m6nycwc"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_n5qbx"]
parameter_name = "Texture2DParameter"
texture_type = 1
texture_filter = 4

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_n3xqf"]
source = 5

[resource]
code = "shader_type spatial;
uniform sampler2D Texture2DParameter : source_color, filter_linear_mipmap;



void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, UV);


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);


}
"
graph_offset = Vector2(-111, 62)
nodes/fragment/0/position = Vector2(560, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_n5qbx")
nodes/fragment/2/position = Vector2(-80, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_n3xqf")
nodes/fragment/3/position = Vector2(297, 263)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 0)
