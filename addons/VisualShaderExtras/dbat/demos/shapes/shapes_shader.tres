[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://bss81nr554d65"]

[ext_resource type="Script" path="res://addons/VisualShaderExtras/dbat/nodes/Shapes/Circle2.gd" id="1_n1igs"]
[ext_resource type="Script" path="res://addons/VisualShaderExtras/dbat/nodes/Shapes/Box2.gd" id="2_fi760"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_ugkp2"]
output_port_for_preview = 0
default_input_values = [1, Vector2(0.5, 0.5), 2, 0.158, 3, 0.957]
initialized = true
script = ExtResource("1_n1igs")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_amhp6"]
output_port_for_preview = 0
default_input_values = [1, Vector2(0.501, 0.5), 2, Vector2(0.375, 0.4), 3, 0.002, 4, -1.862]
initialized = true
script = ExtResource("2_fi760")

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ehpvk"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 0.292]
op_type = 4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kq2wu"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_pnhln"]
function = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_yxx3f"]
default_input_values = [0, 0.0, 1, 0.785]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_v642u"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[resource]
code = "shader_type canvas_item;


// Circle2

//Original code
//float sdCircle(vec2 pos, float r) {
//	return step(length(pos) - r, pos).x;
//}

//New hack - faster than using length func
float circle(vec2 position, float radius, float feather)
{
	return smoothstep(radius, radius + feather, dot(position, position) * 6.0);
}

// Box2

//Original
//float sdBox( in vec2 __position, in vec2 __proportions )
//{
// vec2 __d = abs(__position) - __proportions;
// return length(max(__d, 0.0)) + min(max(__d.x, __d.y), 0.0);
//}
//Alteration
float sdBox(vec2 _pos, vec2 __proportions, float _feather) {
	vec2 d = abs(_pos) - __proportions; 
	float outside = length(max(d, 0.));
	float inside = min(max(d.x, d.y), 0.);
	float both = outside + inside;
	
	//float f = outside - _feather; //makes a kind of outline
	
	// ok! feather is v sensitive tho.
	// when f is 0 the edge is sharp
	float f = _feather; 
	
	return smoothstep(outside, inside, f);
}


void fragment() {
// Input:5
	float n_out5p0 = TIME;


// FloatOp:8
	float n_in8p1 = 0.50000;
	float n_out8p0 = n_out5p0 * n_in8p1;


// FloatFunc:6
	float n_out6p0 = cos(n_out8p0);


// FloatOp:7
	float n_in7p1 = 0.78500;
	float n_out7p0 = n_out6p0 * n_in7p1;


	float n_out2p0;
// Circle2:2
	vec2 n_in2p1 = vec2(0.50000, 0.50000);
	float n_in2p2 = 0.15800;
	{
		n_out2p0 = circle(UV - n_in2p1, n_in2p2, n_out7p0);
	}


	float n_out3p0;
// Box2:3
	vec2 n_in3p1 = vec2(0.50100, 0.50000);
	vec2 n_in3p2 = vec2(0.37500, 0.40000);
	float n_in3p3 = 0.00200;
	{
		n_out3p0 = sdBox(UV-n_in3p1, n_in3p2, n_in3p3);
	}


// Mix:4
	float n_in4p2 = 0.29200;
	vec3 n_out4p0 = mix(vec3(n_out2p0), vec3(n_out3p0), n_in4p2);


// Output:0
	COLOR.rgb = n_out4p0;


}
"
graph_offset = Vector2(-492.37, -108.19)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(620, 60)
nodes/fragment/2/node = SubResource("VisualShaderNodeCustom_ugkp2")
nodes/fragment/2/position = Vector2(-140, -20)
nodes/fragment/3/node = SubResource("VisualShaderNodeCustom_amhp6")
nodes/fragment/3/position = Vector2(80, 160)
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_ehpvk")
nodes/fragment/4/position = Vector2(440, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_kq2wu")
nodes/fragment/5/position = Vector2(-1000, -20)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatFunc_pnhln")
nodes/fragment/6/position = Vector2(-520, 0)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_yxx3f")
nodes/fragment/7/position = Vector2(-320, 0)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_v642u")
nodes/fragment/8/position = Vector2(-680, -20)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 0, 0, 6, 0, 7, 0, 7, 0, 2, 3, 5, 0, 8, 0, 8, 0, 6, 0)
