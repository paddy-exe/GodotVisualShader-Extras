[gd_resource type="VisualShader" load_steps=7 format=3]

[ext_resource type="Script" path="res://addons/VisualShaderExtras/Shapes/Circle.gd" id="1_10ds4"]
[ext_resource type="Script" path="res://addons/VisualShaderExtras/Usability/PR/Connector.gd" id="2_4vj64"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_k1ph0"]
output_port_for_preview = 0
default_input_values = [1, Vector2(0.5, 0.5), 2, 0.1]
initialized = true
script = ExtResource("1_10ds4")

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_dd5ua"]
constant = Color(1, 0.386878, 0.342078, 1)

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_srnum"]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_knrgg"]
initialized = true
script = ExtResource("2_4vj64")

[resource]
code = "shader_type canvas_item;


// Circle

		float sdCircle(vec2 pos, float r) {
			return length(pos) - r;
		}
	

void fragment() {
// ColorConstant:3
	vec4 n_out3p0 = vec4(1.000000, 0.386878, 0.342078, 1.000000);


	float n_out2p0;
// Circle:2
	vec2 n_in2p1 = vec2(0.50000, 0.50000);
	float n_in2p2 = 0.10000;
	{
		n_out2p0 = sdCircle(UV.xy - n_in2p1.xy, n_in2p2);
	}


// ColorOp:5
	vec3 n_out5p0 = abs(vec3(n_out3p0.xyz) - vec3(n_out2p0));


	bool n_out6p0;
	float n_out6p2;
	int n_out6p3;
	mat4 n_out6p4;
	vec2 n_out6p5;
	vec3 n_out6p6;
	vec4 n_out6p7;
// Connector:6
	{
		n_out6p6 = n_out5p0;
	}


// Output:0
	COLOR.rgb = n_out6p6;


}
"
graph_offset = Vector2(-171.742, 102.958)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(440, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeCustom_k1ph0")
nodes/fragment/2/position = Vector2(-387.6, 244.4)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_dd5ua")
nodes/fragment/3/position = Vector2(-260, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorOp_srnum")
nodes/fragment/5/position = Vector2(-40, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeCustom_knrgg")
nodes/fragment/6/position = Vector2(220, 200)
nodes/fragment/connections = PackedInt32Array(2, 0, 5, 1, 3, 0, 5, 0, 5, 0, 6, 6, 6, 6, 0, 0)
