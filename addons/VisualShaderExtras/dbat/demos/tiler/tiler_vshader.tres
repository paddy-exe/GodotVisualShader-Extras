[gd_resource type="VisualShader" load_steps=13 format=3 uid="uid://1a2c8tpsprgn"]

[ext_resource type="Script" path="res://addons/VisualShaderExtras/BlendModes/VividLight.gd" id="3_2vffd"]
[ext_resource type="Script" path="res://addons/VisualShaderExtras/dbat/tilerv3.gd" id="4_1khye"]
[ext_resource type="Texture2D" uid="uid://ba7cojxxohdjb" path="res://addons/VisualShaderExtras/dbat/demos/resources/icon.png" id="4_7m7pb"]
[ext_resource type="Script" path="res://addons/VisualShaderExtras/Shapes/Box.gd" id="4_46hr2"]

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_u5jbf"]
output_port_for_preview = 0
default_input_values = [1, Vector2(0.5, 0.5), 2, Vector2(0.1, 0.1)]
initialized = true
script = ExtResource("4_46hr2")

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_uxt0j"]
initialized = true
script = ExtResource("3_2vffd")

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_rosqw"]
constant = Color(0.10576, 0.181688, 0.480469, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5typr"]
source = 5
texture = ExtResource("4_7m7pb")
texture_type = 1

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_xdvas"]
operator = 3

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_bg1tf"]
parameter_name = "Texture2DParameter"
texture_type = 1
color_default = 2
texture_filter = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_rdjab"]
parameter_name = "BrickShift"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_uwfoq"]
output_port_for_preview = 0
default_input_values = [0, Vector2(3, 2), 1, 0.0, 2, 0.132]
initialized = true
script = ExtResource("4_1khye")

[resource]
code = "shader_type spatial;


// Tiler3

	//uniform float shift : hint_range(0.0, 2.0) = 0.5; 
	
	vec2 FUCKKKKvec2_rotate(vec2 _v2, float _angle, float _shift, float _zoom) {
		//float _row = mod(_v2.y, 2.0);
		float _pivot = 0.5;//_v2/2.0;
		_v2 -= 0.5;
		_v2 = mat2( vec2(cos(_angle), -sin(_angle)), vec2(sin(_angle), cos(_angle)) ) * _v2;
		_v2 += 0.5; 
		return _v2;
	}
	
vec2 vec2_rotate(vec2 _v2, float _angle) {
	_v2 -= 0.5;
	_v2 = mat2( vec2(cos(_angle), -sin(_angle)), vec2(sin(_angle), cos(_angle)) ) * _v2;
	_v2 += 0.5;
	return _v2;
}
	
	vec2 brick_tile(vec2 _uv, float _zoom, float shift)
	{
		_uv *= _zoom;
		float _row = mod(_uv.y, 2.0);
		_uv.x += step(1.0, _row)  *  shift;
		return fract(_uv);
	}
	
	
float random_float(vec2 input) {
	return fract(sin(dot(input.xy, vec2(12.9898,78.233))) * 43758.5453123);
}
	
// Box

		float sdBox( in vec2 __position, in vec2 __proportions )
		{
			vec2 __d = abs(__position) - __proportions;
			return length(max(__d, 0.0)) + min(max(__d.x, __d.y), 0.0);
		}
	

void fragment() {
	vec2 n_out37p0;
// Tiler3:37
	vec2 n_in37p0 = vec2(3.00000, 2.00000);
	float n_in37p1 = 0.00000;
	float n_in37p2 = 0.13200;
	{
		
			//Much simpler to calculate zoom from the tiling vec2
			float zoom = n_in37p0.x * n_in37p0.y;
			
			vec2 st = UV/n_in37p0;
			
			//This variation took me ages to work out:
			vec2 unique_val = floor( st * zoom ) / zoom; 
			
			// Now the random rotation: Courtesy Arnklit
			// https://github.com/Arnklit/TutorialResources/tree/main/tiling_rotation
			
			float rand_rotation = (random_float(unique_val) * 2.0 - 1.0) * n_in37p2 * 3.14;
			//float rand_rotation = ( (random_float(unique_val) *  )-(/2.0)  ) * n_in37p2 * 3.14;
			
			//Just add whatever static rotation may be input:
			rand_rotation += n_in37p1;
			
			
			//float row = mod(st.y, 2.0);
			st = vec2_rotate(st, rand_rotation);//, , zoom);
			//st = brick_tile(st, zoom, );
			
			st = fract(st*zoom); //basic tile
		
			n_out37p0 = st;
			
	}


	float n_out23p0;
// Box:23
	vec2 n_in23p1 = vec2(0.50000, 0.50000);
	vec2 n_in23p2 = vec2(0.10000, 0.10000);
	{
		n_out23p0 = sdBox(n_out37p0.xy - n_in23p1.xy, n_in23p2.xy);
	}


// Output:0
	ALBEDO = vec3(n_out23p0);


}
"
graph_offset = Vector2(-1597.78, 273.51)
nodes/fragment/0/position = Vector2(-400, 460)
nodes/fragment/23/node = SubResource("VisualShaderNodeCustom_u5jbf")
nodes/fragment/23/position = Vector2(-1335.2, 319.6)
nodes/fragment/25/node = SubResource("VisualShaderNodeCustom_uxt0j")
nodes/fragment/25/position = Vector2(-800, 420)
nodes/fragment/26/node = SubResource("VisualShaderNodeColorConstant_rosqw")
nodes/fragment/26/position = Vector2(-994.4, 615.6)
nodes/fragment/27/node = SubResource("VisualShaderNodeTexture_5typr")
nodes/fragment/27/position = Vector2(-1331.6, 622)
nodes/fragment/33/node = SubResource("VisualShaderNodeColorOp_xdvas")
nodes/fragment/33/position = Vector2(-640, 540)
nodes/fragment/34/node = SubResource("VisualShaderNodeTexture2DParameter_bg1tf")
nodes/fragment/34/position = Vector2(-1756.4, 722.4)
nodes/fragment/36/node = SubResource("VisualShaderNodeFloatParameter_rdjab")
nodes/fragment/36/position = Vector2(-1920, 340)
nodes/fragment/37/node = SubResource("VisualShaderNodeCustom_uwfoq")
nodes/fragment/37/position = Vector2(-1640, 360)
nodes/fragment/connections = PackedInt32Array(26, 0, 25, 1, 25, 0, 33, 1, 34, 0, 27, 2, 23, 0, 0, 0, 37, 0, 23, 0)
